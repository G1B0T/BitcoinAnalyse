q4 <- qualitative_hcl(4, palette = "Dark 3")
q4
demoplot(q4, "bar")
demoplot(q4, "map")
x <- seq(from=0, to=100, by=10)
x
a <- seq(from=1, to=20)
a
a %/% 2
y <- seq(from=-2.0*pi, to=2.0*pi, by=pi/2.0)
y
y/pi
fünf
fünf <- seq(1,20,1)
fünf
x %% 2
x %/% 2
x%%2
x
fünf %% 2
gerade <- fünf %% 2
gerade
gerade <- fünf %% 2 == 0
gerade
ungerade <- fünf %% 2 == 1
ungerade
geradeee <- fünf[gerade]
geradeee
ungeradeee <- fünf[ungerade]
ungeradeee
install.packages("C:/Users/giber/OneDrive/Desktop/groesse_und_gewicht.7z", repos = NULL)
install.packages("C:/Users/giber/OneDrive/Desktop/lieferzeiten.7z", repos = NULL)
ggplot(liefer)
library(ggplot2)
ggplot(liefer)
ggplot2(liefer)
library(ggplot2)
liefer <- read_csv("data/lieferzeiten.csv")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
options(digits = 3)
library(knitr)
library(tidyverse)
library(tidyverse)
myPlaette <- brewer.pal(5, "YlGn")
library(RColorBrewer)
as_tibble(mtcars)
View(mtcars)
mtcats?
mtcars?
?mtcars
?mtcars
mt %>%
+ filter(am!=1)
mt %>%
+ filter(am==1)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
+ filter(am==1)
mt %>%
+ filter(am=1)
mt %>%
+ filter(am==true)
mt %>%
+ filter(am==1)
mt %>%
filter(am==1)
adsd
asf
mt %>%
filter(am==1)
View(mtcars)
mt %>%
select(cyl, hp, gear)
mt %>%
select(cyl, hp, gear) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear)
mt %>%
select(cyl, hp, gear) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
%>%
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear)
mt %>%
select(cyl, hp, gear)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) #Rename
select(cyl, hp, gear) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) #Rename
select(Zylinder, hp, gear)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) #Rename
select(Zylinder, PS, AnzahlGaenge)
mt %>%
select(Zylinder, PS, AnzahlGaenge)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%#Rename
select(Zylinder, PS, AnzahlGaenge)
install.packages("C:/Users/giber/OneDrive/Desktop/angebotsbearbeitung.7z", repos = NULL)
read.csv2(C:\Users\giber\OneDrive\Desktop\angebotsbearbeitung.csv)
read.csv2("C:\Users\giber\OneDrive\Desktop\angebotsbearbeitung.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
#2b)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
#2b)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
#2b)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
#2b)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(cyl, hp, gear) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
#2b)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
#2b)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) #Rename
%>%
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%
select(Zylinder, PS, AnzahlGaenge)
class(as.data.frame(mt))
mt %>%
filter(am==1)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%
select(Zylinder, PS, AnzahlGaenge)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear)# %>%    #Rename
# select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
dplyr::select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
dplyr::select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
read.csv2("C:\Users\giber\OneDrive\Desktop\angebotsbearbeitung.csv")
read.csv2(C:\Users\giber\OneDrive\Desktop\angebotsbearbeitung.csv)
angebot <- read.csv2("C:\Users\giber\OneDrive\Desktop\angebotsbearbeitung.csv")
angebot <- read.csv2("Users\giber\OneDrive\Desktop\angebotsbearbeitung.csv")
angebot <- read.csv2("Desktop\angebotsbearbeitung.csv")
angebot <- read.csv2("data\angebotsbearbeitung.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
dplyr::select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
angebot <- read.csv2("data\angebotsbearbeitung.csv")
angebot <- read.csv2("data/angebotsbearbeitung.csv")
angebot <- read.csv("data/angebotsbearbeitung.csv")
angebot <- read.csv2("data/angebotsbearbeitung.csv")
angebot <- read_csv2("data/angebotsbearbeitung.csv")
angebot <- read_csv2("data\angebotsbearbeitung.csv")
library(readr)
angebotsbearbeitung <- read_csv("data/angebotsbearbeitung.csv")
View(angebotsbearbeitung)
angebot <- read_csv("data\angebotsbearbeitung.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
dplyr::select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
angebot <- read_csv("data\angebotsbearbeitung.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
dplyr::select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
angebot <- read_csv("data\angebotsbearbeitung.csv")
angebot <- read_csv("data/angebotsbearbeitung.csv")
angebot <- read_csv("data\angebotsbearbeitung.csv")
angebot <- read_csv("data/angebotsbearbeitung.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
angebot <- read_csv("data/angebotsbearbeitung.csv")
angebot
angebot <- read_csv("data/angebotsbearbeitung.csv")
angebot
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
#2a) Filter nach Manuelle Getriebe
as_tibble(mtcars)
mt <- as_tibble(mtcars)
class(as.data.frame(mt))
mt %>%
filter(am==1)
mt %>%
rename(Zylinder=cyl, PS=hp, AnzahlGaenge = gear) %>%    #Rename
dplyr::select(Zylinder, PS, AnzahlGaenge) #Filter nach den Spalten Zylinder, PS und AnzahlGänge
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
install.packages("dygraphs")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library (data.table)
bitcoin <- fread("C:/Users/giber/OneDrive/DocumentsVDA/data/Bitcoin prices.csv")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
bitcoin <- ("C:/Users/giber/OneDrive/DocumentsVDA/data/Bitcoin prices.csv")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library (data.table)
bitcoin <- ("C:/Users/giber/OneDrive/DocumentsVDA/data/Bitcoin prices.csv")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
bitcoin <- ("C:/Users/giber/OneDrive/DocumentsVDA/data/Bitcoin prices.csv")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library (data.table)
bitcoin <- ("C:/Users/giber/OneDrive/DocumentsVDA/data/Bitcoin prices.csv")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
bitcoin <- ("C:/Users/giber/OneDrive/DocumentsVDA/data/Bitcoin prices.csv")
names(bitcoin) <- c("Datum", "Open", "High", "Low", "Close", "Volume", "MarketCap"))
bitcoin <- ("C:/Users/giber/OneDrive/DocumentsVDA/data/Bitcoin prices.csv")
names(bitcoin) <- c("Datum", "Open", "High", "Low", "Close", "Volume", "MarketCap")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library(data.table)
library(dplyr)
library(kableExtra)
library(DT)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library(data.table)
library(dplyr)
library(kableExtra)
library(DT)
bitcoin <- fread("C:/Users/groov/OneDrive/Dokumente/Uni Unterlagen/4. Semester/VDA/Bitcoin prices.csv")
tweetcount_per_price <- readRDS("C:/Users/groov/OneDrive/Dokumente/Uni Unterlagen/4. Semester/VDA/tweetcount_per_price.rds")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library(data.table)
library(dplyr)
library(kableExtra)
library(DT)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library(data.table)
library(dplyr)
library(kableExtra)
library(DT)
bitcoin <- fread("C:/Users/giber/OneDrive/Documents/VDA/Bitcoin prices.csv")
tweetcount_per_price <- readRDS("C:/Users/giber/OneDrive/Documents/VDA/tweetcount_per_price.rds")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
bitcoin$Datum <- as.Date(bitcoin$Datum, format = "%Y-%m-%d")
tweetcount_per_price %>% datatable()
# Extrahieren der Spalten "Datum", "High" und "Low"
date_high_low_data <- bitcoin[, c("Datum", "High", "Low")]
# Erstellen eines Dygraph-Diagramm mit Datum auf der X-Achse
dygraph(date_high_low_data, main = "Bitcoin High and Low Prices",
x = "Datum",y="Preis in $") %>%
dySeries("High", label = "High") %>%
dySeries("Low", label = "Low") %>%
dyOptions(colors = c("green", "red")) %>%
dyShading(from ="2016-07-08",to = "2016-07-10", color = "yellow", axis = "x") %>%
dyShading(from ="2020-05-17",to = "2020-05-19", color = "yellow", axis = "x") %>%
dyEvent("2016-07-09", "2.Halving", labelLoc = "bottom") %>%
dyEvent("2020-05-18", "3.Halving", labelLoc = "bottom")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library(data.table)
library(dplyr)
library(kableExtra)
library(DT)
bitcoin <- fread("C:/Users/giber/OneDrive/Documents/VDA/Bitcoin prices.csv")
tweetcount_per_price <- readRDS("C:/Users/giber/OneDrive/Documents/VDA/tweetcount_per_price.rds")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
bitcoin$Datum <- as.Date(bitcoin$Datum, format = "%Y-%m-%d")
tweetcount_per_price %>% datatable()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library(data.table)
library(dplyr)
library(kableExtra)
library(DT)
bitcoin <- fread("C:/Users/giber/OneDrive/Documents/VDA/Bitcoin prices.csv")
tweetcount_per_price <- readRDS("C:/Users/giber/OneDrive/Documents/VDA/tweetcount_per_price.rds")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
bitcoin$Datum <- as.Date(bitcoin$Datum, format = "%Y-%m-%d")
tweetcount_per_price %>% datatable()
# Extrahieren der Spalten "Datum", "High" und "Low"
date_high_low_data <- bitcoin[, c("Datum", "High", "Low")]
# Erstellen eines Dygraph-Diagramm mit Datum auf der X-Achse
dygraph(date_high_low_data, main = "Bitcoin High and Low Prices",
x = "Datum",y="Preis in $") %>%
dySeries("High", label = "High") %>%
dySeries("Low", label = "Low") %>%
dyOptions(colors = c("green", "red")) %>%
dyShading(from ="2016-07-08",to = "2016-07-10", color = "yellow", axis = "x") %>%
dyShading(from ="2020-05-17",to = "2020-05-19", color = "yellow", axis = "x") %>%
dyEvent("2016-07-09", "2.Halving", labelLoc = "bottom") %>%
dyEvent("2020-05-18", "3.Halving", labelLoc = "bottom")
# Extrahieren der Spalten "Datum", "High" und "Low"
date_high_low_data <- bitcoin[, c("Datum", "High", "Low")]
# Erstellen eines Dygraph-Diagramm mit Datum auf der X-Achse
dygraph(date_high_low_data, main = "Bitcoin Bull and Bearmarket",
x = "Datum",y="Preis in $") %>%
dySeries("High", label = "High") %>%
dySeries("Low", label = "Low") %>%
dyOptions(colors = c("green", "red","lightgreen","orange")) %>%
dyShading(from ="2016-07-08",to = "2016-07-10", color = "yellow", axis = "x") %>%
dyShading(from ="2020-05-17",to = "2020-05-19", color = "yellow", axis = "x") %>%
dyEvent("2016-07-09", "2.Halving", labelLoc = "bottom") %>%
dyEvent("2020-05-18", "3.Halving", labelLoc = "bottom") %>%
dyShading(from ="2015-01-14",to = "2017-12-17", color = "lightgreen", axis = "x") %>%
dyShading(from ="2017-12-18",to = "2018-12-15", color = "orange", axis = "x") %>%
dyShading(from ="2018-12-16",to = "2021-11-09", color = "lightgreen", axis = "x") %>%
dyShading(from ="2021-11-10",to = "2022-11-09", color = "orange", axis = "x") %>%
dyShading(from ="2022-11-10",to = "2023-04-09", color = "lightgreen", axis = "x")
# Extrahieren der Spalten "Datum", "High" und "Low"
date_high_tweet_data <- tweetcount_per_price[, c("Datum", "Low", "Anzahl")]
# Monatsspalte hinzufügen
date_high_tweet_data <- date_high_tweet_data %>%
mutate(Monat = format(Datum, "%Y-%m"))
# Durchschnitt für jeden Monat berechnen
ergebnis <- date_high_tweet_data %>%
group_by(Monat) %>%
summarize(Durchschnitt_Preis = mean(Low),
Durchschnitt_Anzahl = mean(Anzahl))
# Plot erstellen
ggplot(ergebnis) +
geom_bar(aes(x = Monat, y = Durchschnitt_Preis, fill = "Durchschnittspreis"), stat = "identity",width = 0.5, position = "dodge") +
geom_bar(aes(x = Monat, y = Durchschnitt_Anzahl, fill = "Durchschnittsanzahl"), stat = "identity", width = 0.25, position = "dodge") +
labs(x = "Monat", y = "Durchschnittswerte", fill = "Variable") +
scale_fill_manual(values = c("Durchschnittspreis" = "gold", "Durchschnittsanzahl" = "blue")) +
theme(legend.position = "top")
# Korrelation berechnen
korrelation <- cor(ergebnis$Durchschnitt_Preis, ergebnis$Durchschnitt_Anzahl)
ggplot(ergebnis, aes(x = Durchschnitt_Preis, y = Durchschnitt_Anzahl)) +
geom_point() +
labs(x = "Durchschnittspreis", y = "Durchschnittsanzahl") +
annotate("text", x = min(ergebnis$Durchschnitt_Preis), y = max(ergebnis$Durchschnitt_Anzahl),
label = paste("Korrelation:", round(korrelation, 5)), hjust = 0, vjust = 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(RColorBrewer)
library(readr)
library(dygraphs)
library(lubridate)
library(data.table)
library(dplyr)
library(kableExtra)
library(DT)
bitcoin <- fread("C:/Users/giber/OneDrive/Documents/VDA/Bitcoin prices.csv")
tweetcount_per_price <- readRDS("C:/Users/giber/OneDrive/Documents/VDA/tweetcount_per_price.rds")
names(bitcoin) <- c("Datum","Open","High","Low","Close","ADJ.Close","Handelsvolumen")
bitcoin$Datum <- as.Date(bitcoin$Datum, format = "%Y-%m-%d")
tweetcount_per_price %>% datatable()
